            Arm64A                                      x86_64
Init   0x0000000100010001                       rax = 0x0000000100400000

First comparison
  x1 = 0x0000000100010001                       rsi = 0x0000000100400001
  x2 = 0x0000000100010001                       rax = 0x0000000100400001

Moving break first time:
   x0 = 0x0000000100010011                       rax = 0x0000000100400011
  x14 = 0x0000000100010205                      rsi = 0x0000000100400205

Second comparison
  x1 = 0x0000000100010001                       rax = 0x0000000100400001
  x2 = 0x0000000100010205                       rsi = 0x0000000100400205

  x1 = 0x0000000100010205                       rsi = 0x0000000100400205
  x2 = 0x0000000100010205                       rax = 0x0000000100400205

Moving break second time:
   x0 = 0x0000000100010215                      rax = 0x0000000100400215
  x14 = 0x0000000100010409                      rsi = 0x0000000100400409

Third insertion:
   x1 = 0x0000000100010001                      rax = 0x0000000100400001
   x2 = 0x0000000100010409                      rsi = 0x0000000100400409
   x1 = 0x0000000100010205                      rax = 0x0000000100400205
   x2 = 0x0000000100010409                      rsi = 0x0000000100400409
   x1 = 0x0000000100010409                      rax = 0x0000000100400409
   x2 = 0x0000000100010409                      rsi = 0x0000000100400409

Moving break third time:
    x0 = 0x0000000100010419                     rax = 0x0000000100400419
   x14 = 0x000000010001060d                     rsi = 0x000000010040060d

 Dealocate:
     x0 = 0x0000000100010419
     x1 = 0x0000000100010215                                 rax = 0x0000000100400215
     x1 = 0x0000000100010205 .                               rax = 0x0000000100400205

0x100010205: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 .        0x100400205: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x10001020d: 0xf4 0x01 0x00 0x00 0x00 0x00 0x00 0x00          0x10040020d: 0x04 0x02 0x00 0x00 0x00 0x00 0x00 0x00 .


0x100010205: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 .        0x100400205: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x10001020d: 0xf4 0x01 0x00 0x00 0x00 0x00 0x00 0x00          0x10040020d: 0x04 0x02 0x00 0x00 0x00 0x00 0x00 0x00


Here we have 500 (0x01f4)                                     Here we have 516 (0x204)

Inserting in the gab:
     x1 = 0x0000000100010001                                 rax = 0x0000000100400001
     x2 = 0x000000010001060d                                 rsi = 0x000000010040060d
  
            x3 = 0x0000000000000000                          (%rax) = 0000000000000000

     x1 = 0x0000000100010205 .                               rax = 0x0000000100400205
     x2 = 0x000000010001060d                                 rsi = 0x000000010040060d


            x3 = 0x0000000000000001                          (%rax) = 0000000000000001
Size:
            x3 = 0x00000000000001f4                          rdx = 0x0000000000000204
            x8 = 0x0000000000000320                          rdi = 0x0000000000000320
Here we differ slightly with regards of the buffer

     x1 = 0x0000000100010409                                 rax = 0x0000000100400409 
     x2 = 0x000000010001060d .                               rsi = 0x000000010040060d
 
     x1 = 0x000000010001060d .                               rax = 0x000000010040060d
     x2 = 0x000000010001060d .                               rsi = 0x000000010040060d

Moving break again:
    x0 = 0x000000010001061d                                  rax = 0x000000010040061d
   x14 = 0x000000010001093d .                                rsi = 0x000000010040093d


Inserting in the middle:
     x1 = 0x0000000100010001 .                               rax = 0x0000000100400001
     x2 = 0x000000010001093d .                               rsi = 0x000000010040093d

     x1 = 0x0000000100010205 .                               rax = 0x0000000100400205 
     x2 = 0x000000010001093d .                               rsi = 0x000000010040093d


     x3 = 0x0000000000000001                                 (%rax) = 0000000000000001
Size:
     x3 = 0x00000000000001f4 .                               rdx = 0x0000000000000204
     x8 = 0x00000000000000c8                                 rdi = 0x00000000000000c8

    Allocate Here:
    x14 = 0x0000000100010205 .                               rax = 0x0000000100400205
     x1 = 0x0000000100010215 .                               rax = 0x0000000100400215

0x100010205: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00 .    0x100400205: 0x01 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x10001020d: 0xf4 0x01 0x00 0x00 0x00 0x00 0x00 0x00      0x10040020d: 0x04 0x02 0x00 0x00 0x00 0x00 0x00 0x00

0x100010205: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00 .    0x100400205: 0x00 0x00 0x00 0x00 0x00 0x00 0x00 0x00
0x10001020d: 0xf4 0x01 0x00 0x00 0x00 0x00 0x00 0x00      0x10040020d: 0x04 0x02 0x00 0x00 0x00 0x00 0x00 0x00

